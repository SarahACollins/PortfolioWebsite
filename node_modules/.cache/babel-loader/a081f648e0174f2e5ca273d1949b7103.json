{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sarah\\\\Desktop\\\\Website\\\\react-website\\\\src\\\\components\\\\BarChart.js\";\nimport { render } from '@testing-library/react';\nimport React from 'react';\nimport './BarChart.css';\n\nconst Chart = ({\n  children,\n  height,\n  width\n}) => /*#__PURE__*/React.createElement(\"svg\", {\n  viewBox: `0 0 ${width} ${height}`,\n  height: height,\n  width: width,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }\n}, children);\n\nconst Bar = ({\n  fill = '#000',\n  x,\n  y,\n  height,\n  width\n}) => /*#__PURE__*/React.createElement(\"rect\", {\n  fill: fill,\n  x: x,\n  y: y,\n  height: height,\n  width: width,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }\n});\n\nconst BarChart = ({\n  data\n}) => {\n  const barWidth = 20;\n  const barMargin = 5;\n  const width = data.length * (barWidth + barMargin);\n  const height = greatestValue(data.map(datum => datum.lessonsWatched));\n  return /*#__PURE__*/React.createElement(Chart, {\n    height: height,\n    width: width,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, data.map((datum, index) => /*#__PURE__*/React.createElement(Bar, {\n    key: datum.name,\n    fill: \"teal\",\n    x: index * (barWidth + barMargin),\n    y: height - datum.lessonsWatched,\n    width: barWidth,\n    height: datum.lessonsWatched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default BarChart;\n{\n  /*\r\n  function BarGroup(props) {\r\n     let barPadding = 2\r\n     let barColour = props.color\r\n     let widthScale = d => d * 10\r\n   \r\n     let width = widthScale(props.d.value)\r\n     let yMid = props.barHeight * 0.5\r\n     \r\n     return <g className=\"bar-group\">\r\n               <text className=\"name-label\" x=\"-6\" \r\n                     y={yMid} \r\n                     alignmentBaseline=\"middle\" \r\n               >\r\n                   {props.d.name}\r\n               </text>\r\n               <rect \r\n                     y={barPadding * .5}\r\n                     width={width} \r\n                     height={props.barHeight - barPadding} \r\n                     fill={barColour} \r\n               />\r\n               <text className=\"value-label\" \r\n                     x={width- 8} \r\n                     y={yMid} \r\n                     alignmentBaseline=\"middle\" \r\n               >\r\n                     {props.d.value}\r\n               </text>\r\n            </g>\r\n   }\r\n  \n  class BarChart extends React.Component {\r\n   state = {\r\n     data: [\r\n       { name: 'Mon', value: 20 },\r\n       { name: 'Tue', value: 40 },\r\n       { name: 'Wed', value: 35 },\r\n       { name: 'Thu', value: 50 },\r\n       { name: 'Fri', value: 55 },\r\n       { name: 'Sat', value: 40 },\r\n       { name: 'Sun', value: 30 }\r\n     ]\r\n   }\r\n  \n     render() {\r\n       let barHeight = 30\r\n         \r\n       let barGroups = this.state.data.map((d, i) => <g transform={`translate(0, ${i * barHeight})`}>\r\n                                                       <BarGroup d={d} barHeight={barHeight} />\r\n                                                     </g>)                         \r\n       \r\n       return <svg width=\"800\" height=\"300\" >\r\n         <g className=\"container\">\r\n           <text className=\"title\" x=\"10\" y=\"30\">{this.props.title}</text>\r\n           <g className=\"chart\" transform=\"translate(100,60)\">\r\n             {barGroups}\r\n           </g>\r\n         </g>\r\n       </svg>\r\n   }\r\n  }\r\n  \n   export default BarChart\r\n  \n  {/*class BarChart extends React.Component {\r\n   state = {\r\n     data: [\r\n       { name: 'Mon', value: 20 },\r\n       { name: 'Tue', value: 40 },\r\n       { name: 'Wed', value: 35 },\r\n       { name: 'Thu', value: 50 },\r\n       { name: 'Fri', value: 55 },\r\n       { name: 'Sat', value: 40 },\r\n       { name: 'Sun', value: 30 }\r\n     ]\r\n   }\r\n  \n   render() {\r\n     let barHeight = 30\r\n       \r\n     let barGroups = this.state.data.map((d, i) => <g transform={`translate(0, ${i * barHeight})`}>\r\n                                                     <BarGroup d={d} barHeight={barHeight} />\r\n                                                   </g>)                         \r\n     \r\n     return <svg width=\"800\" height=\"300\" >\r\n       <g className=\"container\">\r\n         <text className=\"title\" x=\"10\" y=\"30\">Week beginning 9th July</text>\r\n         <g className=\"chart\" transform=\"translate(100,60)\">\r\n           {barGroups}\r\n         </g>\r\n       </g>\r\n     </svg>\r\n   }\r\n  }\r\n  \n  export default BarChart;\r\n   \r\n   {/*ReactDOM.render(\r\n     <BarChart />,\r\n     document.getElementById('app')\r\n   )*/\n}","map":{"version":3,"sources":["C:/Users/Sarah/Desktop/Website/react-website/src/components/BarChart.js"],"names":["render","React","Chart","children","height","width","Bar","fill","x","y","BarChart","data","barWidth","barMargin","length","greatestValue","map","datum","lessonsWatched","index","name"],"mappings":";AAAA,SAASA,MAAT,QAAuB,wBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,MAAZ;AAAoBC,EAAAA;AAApB,CAAD,kBACZ;AAAK,EAAA,OAAO,EAAG,OAAMA,KAAM,IAAGD,MAAO,EAArC;AAAwC,EAAA,MAAM,EAAEA,MAAhD;AAAwD,EAAA,KAAK,EAAEC,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGF,QADH,CADF;;AAMA,MAAMG,GAAG,GAAG,CAAC;AAAEC,EAAAA,IAAI,GAAG,MAAT;AAAiBC,EAAAA,CAAjB;AAAoBC,EAAAA,CAApB;AAAuBL,EAAAA,MAAvB;AAA+BC,EAAAA;AAA/B,CAAD,kBACV;AAAM,EAAA,IAAI,EAAEE,IAAZ;AAAkB,EAAA,CAAC,EAAEC,CAArB;AAAwB,EAAA,CAAC,EAAEC,CAA3B;AAA8B,EAAA,MAAM,EAAEL,MAAtC;AAA8C,EAAA,KAAK,EAAEC,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF;;AAGA,MAAMK,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC7B,QAAMC,QAAQ,GAAG,EAAjB;AACA,QAAMC,SAAS,GAAG,CAAlB;AACA,QAAMR,KAAK,GAAGM,IAAI,CAACG,MAAL,IAAeF,QAAQ,GAAGC,SAA1B,CAAd;AACA,QAAMT,MAAM,GAAGW,aAAa,CAACJ,IAAI,CAACK,GAAL,CAASC,KAAK,IAAIA,KAAK,CAACC,cAAxB,CAAD,CAA5B;AAEA,sBACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEd,MAAf;AAAuB,IAAA,KAAK,EAAEC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,IAAI,CAACK,GAAL,CAAS,CAACC,KAAD,EAAQE,KAAR,kBACR,oBAAC,GAAD;AACE,IAAA,GAAG,EAAEF,KAAK,CAACG,IADb;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,CAAC,EAAED,KAAK,IAAIP,QAAQ,GAAGC,SAAf,CAHV;AAIE,IAAA,CAAC,EAAET,MAAM,GAAGa,KAAK,CAACC,cAJpB;AAKE,IAAA,KAAK,EAAEN,QALT;AAME,IAAA,MAAM,EAAEK,KAAK,CAACC,cANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF;AAcD,CApBD;;AAsBA,eAAeR,QAAfsourcesContent":["import { render } from '@testing-library/react'\r\nimport React from 'react'\r\nimport './BarChart.css'\r\n\r\nconst Chart = ({ children, height, width }) => (\r\n  <svg viewBox={`0 0 ${width} ${height}`} height={height} width={width}>\r\n    {children}\r\n  </svg>\r\n)\r\n\r\nconst Bar = ({ fill = '#000', x, y, height, width }) => (\r\n  <rect fill={fill} x={x} y={y} height={height} width={width} />\r\n)\r\nconst BarChart = ({ data }) => {\r\n  const barWidth = 20\r\n  const barMargin = 5\r\n  const width = data.length * (barWidth + barMargin)\r\n  const height = greatestValue(data.map(datum => datum.lessonsWatched))\r\n\r\n  return (\r\n    <Chart height={height} width={width}>\r\n      {data.map((datum, index) => (\r\n        <Bar\r\n          key={datum.name}\r\n          fill=\"teal\"\r\n          x={index * (barWidth + barMargin)}\r\n          y={height - datum.lessonsWatched}\r\n          width={barWidth}\r\n          height={datum.lessonsWatched}\r\n        />\r\n      ))}\r\n    </Chart>\r\n  )\r\n}\r\n\r\nexport default BarChart\r\n{/*\r\nfunction BarGroup(props) {\r\n    let barPadding = 2\r\n    let barColour = props.color\r\n    let widthScale = d => d * 10\r\n  \r\n    let width = widthScale(props.d.value)\r\n    let yMid = props.barHeight * 0.5\r\n    \r\n    return <g className=\"bar-group\">\r\n              <text className=\"name-label\" x=\"-6\" \r\n                    y={yMid} \r\n                    alignmentBaseline=\"middle\" \r\n              >\r\n                  {props.d.name}\r\n              </text>\r\n              <rect \r\n                    y={barPadding * .5}\r\n                    width={width} \r\n                    height={props.barHeight - barPadding} \r\n                    fill={barColour} \r\n              />\r\n              <text className=\"value-label\" \r\n                    x={width- 8} \r\n                    y={yMid} \r\n                    alignmentBaseline=\"middle\" \r\n              >\r\n                    {props.d.value}\r\n              </text>\r\n           </g>\r\n  }\r\n\r\nclass BarChart extends React.Component {\r\n  state = {\r\n    data: [\r\n      { name: 'Mon', value: 20 },\r\n      { name: 'Tue', value: 40 },\r\n      { name: 'Wed', value: 35 },\r\n      { name: 'Thu', value: 50 },\r\n      { name: 'Fri', value: 55 },\r\n      { name: 'Sat', value: 40 },\r\n      { name: 'Sun', value: 30 }\r\n    ]\r\n  }\r\n\r\n    render() {\r\n      let barHeight = 30\r\n        \r\n      let barGroups = this.state.data.map((d, i) => <g transform={`translate(0, ${i * barHeight})`}>\r\n                                                      <BarGroup d={d} barHeight={barHeight} />\r\n                                                    </g>)                         \r\n      \r\n      return <svg width=\"800\" height=\"300\" >\r\n        <g className=\"container\">\r\n          <text className=\"title\" x=\"10\" y=\"30\">{this.props.title}</text>\r\n          <g className=\"chart\" transform=\"translate(100,60)\">\r\n            {barGroups}\r\n          </g>\r\n        </g>\r\n      </svg>\r\n  }\r\n}\r\n\r\n  export default BarChart\r\n\r\n{/*class BarChart extends React.Component {\r\n  state = {\r\n    data: [\r\n      { name: 'Mon', value: 20 },\r\n      { name: 'Tue', value: 40 },\r\n      { name: 'Wed', value: 35 },\r\n      { name: 'Thu', value: 50 },\r\n      { name: 'Fri', value: 55 },\r\n      { name: 'Sat', value: 40 },\r\n      { name: 'Sun', value: 30 }\r\n    ]\r\n  }\r\n\r\n  render() {\r\n    let barHeight = 30\r\n      \r\n    let barGroups = this.state.data.map((d, i) => <g transform={`translate(0, ${i * barHeight})`}>\r\n                                                    <BarGroup d={d} barHeight={barHeight} />\r\n                                                  </g>)                         \r\n    \r\n    return <svg width=\"800\" height=\"300\" >\r\n      <g className=\"container\">\r\n        <text className=\"title\" x=\"10\" y=\"30\">Week beginning 9th July</text>\r\n        <g className=\"chart\" transform=\"translate(100,60)\">\r\n          {barGroups}\r\n        </g>\r\n      </g>\r\n    </svg>\r\n  }\r\n}\r\n\r\nexport default BarChart;\r\n  \r\n  {/*ReactDOM.render(\r\n    <BarChart />,\r\n    document.getElementById('app')\r\n  )*/}"]},"metadata":{},"sourceType":"module"}